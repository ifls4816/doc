import{c as n}from"./app.a7225dcf.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="ecmascript6-\u57FA\u7840\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#ecmascript6-\u57FA\u7840\u8BED\u6CD5" aria-hidden="true">#</a> ECMAScript6 \u57FA\u7840\u8BED\u6CD5</h1><h2 id="_1-\u53D8\u91CF\u548C\u5E38\u91CF\u5173\u952E\u8BCD" tabindex="-1"><a class="header-anchor" href="#_1-\u53D8\u91CF\u548C\u5E38\u91CF\u5173\u952E\u8BCD" aria-hidden="true">#</a> 1 \u53D8\u91CF\u548C\u5E38\u91CF\u5173\u952E\u8BCD</h2><h3 id="_1-1-let-\u5173\u952E\u8BCD" tabindex="-1"><a class="header-anchor" href="#_1-1-let-\u5173\u952E\u8BCD" aria-hidden="true">#</a> 1.1 let \u5173\u952E\u8BCD</h3><p>let \u7528\u53D8\u91CF\u58F0\u660E</p><ul><li>\u6CA1\u6709\u53D8\u91CF\u7684\u63D0\u5347</li><li>\u6709\u5757\u7EA7\u4F5C\u7528\u57DF</li><li>\u4E0D\u80FD\u91CD\u590D\u58F0\u660E\uFF08\u53EF\u4EE5\u91CD\u590D\u8D4B\u503C\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F7F\u7528let\u58F0\u660E\u7684\u53D8\u91CF\u6CA1\u6709\u53D8\u91CF\u63D0\u5347</span>
a <span class="token operator">=</span> <span class="token number">10</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">//\u62A5\u9519</span>
<span class="token keyword">let</span> a

<span class="token comment">//\u4E00\u5BF9\u5927\u62EC\u53F7\u5C31\u662F\u4E00\u4E2A\u7A0B\u5E8F\u5757\uFF0C\u5728\u5927\u62EC\u53F7\u4E4B\u4E2D\u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u51FA\u4E86\u5927\u62EC\u53F7\u5C31\u4E0D\u80FD\u7528\u4E86</span>
<span class="token punctuation">{</span>
  <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token string">&#39;\u952E\u76D8&#39;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">//\u6B63\u5E38\u8F93\u51FA \u952E\u76D8</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">//\u62A5\u9519</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">//\u62A5\u9519</span>

<span class="token comment">//\u4F7F\u7528let\u5B9A\u4E49\u7684\u53D8\u91CF\uFF0C\u4E0D\u80FD\u91CD\u590D\u58F0\u660E</span>
<span class="token keyword">let</span> abc <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">let</span> abc <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span> <span class="token comment">//\u62A5\u9519</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="_1-2-const-\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#_1-2-const-\u5E38\u91CF" aria-hidden="true">#</a> 1.2 const \u5E38\u91CF</h3><p>\u7279\u70B9\uFF1A</p><ul><li>\u6CA1\u6709\u53D8\u91CF\u63D0\u5347</li><li>\u4E5F\u6709\u5757\u7EA7\u4F5C\u7528\u57DF</li><li>\u4E00\u65E6\u8D4B\u503C\u5C31\u4E0D\u80FD\u6539\u53D8</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u4E00\u65E6\u58F0\u660E\u5C31\u4E0D\u4F1A\u53D1\u751F\u6539\u53D8\u7684\u503C\u3002</span>
<span class="token keyword">const</span> pi <span class="token operator">=</span> <span class="token number">3.1415</span><span class="token punctuation">;</span> <span class="token comment">//\u9002\u5408\u58F0\u660E\u4E0B\u9762\u4E0D\u7528\u6539\u53D8\u7684\u91CF</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pi<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u5E38\u91CF\u4E5F\u6709\u5757\u7EA7\u4F5C\u7528\u57DF</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> word <span class="token operator">=</span> <span class="token string">&#39;\u4F60\u597D\uFF0C\u4E16\u754C\uFF01&#39;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u58F0\u660E\u5E38\u91CF\u65F6\uFF0C\u5982\u679C\u4E0D\u521D\u59CB\u5316\u503C\u5219\u4F1A\u76F4\u63A5\u62A5\u9519</span>
<span class="token keyword">const</span> word<span class="token punctuation">;</span><span class="token comment">//\u62A5\u9519</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_1-3-var\u3001let-\u548C-const-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_1-3-var\u3001let-\u548C-const-\u7684\u533A\u522B" aria-hidden="true">#</a> 1.3 var\u3001let \u548C const \u7684\u533A\u522B</h3><ul><li>var \u548C let \u90FD\u80FD\u58F0\u660E\u53D8\u91CF\uFF0C\u4F46\u662F let \u66F4\u4E25\u8C28\u4E00\u4E9B\uFF0C\u5728 es6 \u4E4B\u540E\u90FD\u63A8\u8350\u4F7F\u7528 let \u6765\u58F0\u660E\u53D8\u91CF\u3002</li><li>let \u7684\u7279\u6B8A\u70B9\uFF1A \u4E0D\u80FD\u63D0\u5347\u53D8\u91CF(\u4FDD\u8BC1\u7A0B\u5E8F\u7684\u903B\u8F91\u901A\u7545)\u3001 \u6709\u5757\u7EA7\u4F5C\u7528\u57DF(\u907F\u514D\u53D8\u91CF\u4EA4\u53C9\u6C61\u67D3)\u3001\u4E0D\u80FD\u91CD\u590D\u58F0\u660E(\u4FDD\u8BC1\u53D8\u91CF\u7684\u552F\u4E00\u6027\uFF09</li><li>const \u7528\u6765\u58F0\u660E\u5E38\u91CF\uFF0C\u5E38\u91CF\u662F\u4E0D\u80FD\u6539\u53D8\u7684\u91CF\uFF0C\u5E38\u91CF\u4E5F\u6709\u5757\u7EA7\u4F5C\u7528\u57DF\uFF0C\u4E0D\u80FD\u63D0\u5347\uFF0C\u521D\u59CB\u5316\u5E38\u91CF\u65F6\u5FC5\u987B\u8D4B\u503C</li><li>\u80FD\u7528 const \u5C31\u7528 const</li></ul><h2 id="_2-\u8D4B\u503C\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#_2-\u8D4B\u503C\u89E3\u6784" aria-hidden="true">#</a> 2 \u8D4B\u503C\u89E3\u6784</h2><p>==\u89E3\u6784\u8D4B\u503C\u5C31\u662F\u5C06\u5BF9\u8C61\u6216\u8005\u6570\u7EC4\u4E2D\u7684\u6570\u636E\u62C6\u89E3\u51FA\u6765\u5206\u522B\u8D4B\u503C\u7ED9\u67D0\u51E0\u4E2A\u53D8\u91CF/\u5E38\u91CF==</p><h3 id="_2-1-\u7ED3\u6784\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-1-\u7ED3\u6784\u65B9\u6CD5" aria-hidden="true">#</a> 2.1 \u7ED3\u6784\u65B9\u6CD5</h3><ul><li>\u5BF9\u8C61\u89E3\u6784</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u58F0\u660E\u4E86\u4E24\u4E2A\u5E38\u91CF: name  type</span>
<span class="token comment">//\u53D8\u91CF/\u5E38\u91CF \u7684\u540D\u79F0\u5FC5\u987B\u548C\u5BF9\u8C61\u7684key\u540C\u540D</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> name1<span class="token punctuation">,</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u82B1\u6728\u5170&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;\u6218\u58EB&#39;</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span> <span class="token comment">//\u4E0D\u540C\u540D\u5C31\u662F undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u6570\u7EC4\u89E3\u6784</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">[</span>aaa<span class="token punctuation">,</span> bbbb<span class="token punctuation">,</span> cde<span class="token punctuation">,</span> daa<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">111</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token number">3.1415</span><span class="token punctuation">,</span> <span class="token string">&#39;hahaha&#39;</span><span class="token punctuation">]</span>
aaa <span class="token comment">// 111</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> third <span class="token operator">=</span> <span class="token string">&#39;\u9ED8\u8BA4\u503C&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">]</span>
third <span class="token comment">// &quot;baz&quot;</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>head<span class="token punctuation">,</span> <span class="token operator">...</span>tail<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
head <span class="token comment">// 1</span>
tail <span class="token comment">// [2, 3, 4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>\u6D45\u62F7\u8D1D\u5BF9\u8C61&amp;\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">cc</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj1 <span class="token punctuation">}</span>
obj1<span class="token punctuation">.</span>c<span class="token punctuation">.</span>cc <span class="token operator">=</span> <span class="token keyword">null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">// {a: 1, b: 2, c: {cc: null}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// {a: 1, b: 2, c: {cc: null}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u5C55\u5F00\u8BED\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
consoloe<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token comment">// 0 1 2</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>\u5408\u5E76\u6570\u7EC4&amp;\u5BF9\u8C61</li></ul><p>\u53EF\u4EE3\u66FF contact push unshift</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//[1,2,3,4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u5B57\u7B26\u4E32\u8F6C\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>str<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//[h,e,l,l,o]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-2-\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#_2-2-\u522B\u540D" aria-hidden="true">#</a> 2.2 \u522B\u540D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u522B\u540D</span>
<span class="token comment">//     \u539F\u540D: \u522B\u540D</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> username<span class="token punctuation">,</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u82B1\u6728\u5170&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;\u6218\u58EB&#39;</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment">//\u4E00\u65E6\u4F7F\u7528\u4E86\u522B\u540D\uFF0C\u539F\u540D\u5C31\u65E0\u6CD5\u4F7F\u7528\u4E86</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E24\u79CD\u9519\u8BEF\u793A\u8303\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u76D6\u4F26&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;\u6218\u58EB&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;\u5FB7\u739B\u897F\u4E9A&#39;</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>country<span class="token punctuation">)</span> <span class="token comment">//\u62A5\u9519</span>

<span class="token keyword">let</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> type<span class="token punctuation">,</span> country <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u76D6\u4F26&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;\u6218\u58EB&#39;</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>country<span class="token punctuation">)</span> <span class="token comment">//undefined</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2-3-\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_2-3-\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 2.3 \u6269\u5C55\u8FD0\u7B97\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">...</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ccc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ddd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;eee&#39;</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">//\u591A\u51FA\u6765\u7684cccdddeee\u5168\u90FD\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u4FDD\u5B58\u5728\u53D8\u91CFc\u4E2D</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-4-\u5E38\u89C1\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-4-\u5E38\u89C1\u7528\u6CD5" aria-hidden="true">#</a> 2.4 \u5E38\u89C1\u7528\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4EA4\u6362\u4E24\u4E2A\u53D8\u91CF\u7684\u503C</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>y<span class="token punctuation">,</span> x<span class="token punctuation">]</span> <span class="token comment">// x:2 y:1</span>
<span class="token comment">// \u89E3\u6784\u51FD\u6570\u7684\u8FD4\u56DE\u503C: \u6570\u7EC4</span>
<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u89E3\u6784\u51FD\u6570\u7684\u8FD4\u56DE\u503C: \u5BF9\u8C61</span>
<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> foo<span class="token punctuation">,</span> bar <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_3-\u5B57\u7B26\u4E32\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_3-\u5B57\u7B26\u4E32\u6269\u5C55" aria-hidden="true">#</a> 3 \u5B57\u7B26\u4E32\u6269\u5C55</h2><h3 id="_3-1-\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_3-1-\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 3.1 \u6A21\u677F\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;a href=&#39;#&#39; title=&quot;\u6D4B\u8BD5&quot;&gt;\u8DF3\u8F6C&lt;/a&gt;</span><span class="token template-punctuation string">\`</span></span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">//\u5728\u53CD\u5F15\u53F7\u4E2D\u53EF\u4EE5\u4E0D\u7528\u7BA1 \u5355\u53CC\u5F15\u53F7\u7684\u5D4C\u5957\u95EE\u9898</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://www.baidu.com&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">domain</span><span class="token operator">:</span> <span class="token string">&#39;\u767E\u5EA6&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;\u767E\u5EA6\u4E00\u4E0B\u4F60\u5C31\u77E5\u9053&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;a href=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; title=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>domain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/a&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">//\u6B64\u5904\u4E3A\u4E3B\u8981\u7528\u6CD5 \u53D8\u91CF\u5728\u6A21\u677F\u5B57\u7B26\u4E32\u4E2D\u7684\u5199\u6CD5</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>

str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u9CB8\u9C7C\u6B7B\u540E\u5C38\u4F53\u4F1A\u7F13\u6162\u7684\u6C89\u5165\u6D77\u5E95\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u751F\u7269\u5B66\u5BB6\u79F0\u4E4B\u4E3A\u9CB8\u843D;
\u9CA8\u9C7C\u6B7B\u540E\u5C38\u4F53\u4E5F\u4F1A\u7F13\u6162\u7684\u6C89\u5165\u6D77\u5E95\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u6210\u4E3A\u9CA8\u6389</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">//\u6A21\u677F\u5B57\u7B26\u4E32\u4E2D\u53EF\u4EE5\u6362\u884C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_3-2-\u5B57\u7B26\u4E32\u65B9\u6CD5\u7684\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_3-2-\u5B57\u7B26\u4E32\u65B9\u6CD5\u7684\u6269\u5C55" aria-hidden="true">#</a> 3.2 \u5B57\u7B26\u4E32\u65B9\u6CD5\u7684\u6269\u5C55</h3><ul><li>includes()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;abcdefg&#39;</span>
<span class="token keyword">let</span> char <span class="token operator">=</span> <span class="token string">&#39;deg&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//\u5224\u65ADstr\u5B57\u7B26\u4E32\u4E2D\u662F\u5426\u5305\u542Bchar\u5B57\u7B26\u4E32  //false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>startsWith() \u548C endsWith()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;abcdefg&#39;</span>
<span class="token keyword">let</span> char <span class="token operator">=</span> <span class="token string">&#39;efg&#39;</span>
<span class="token comment">//\u5224\u65ADstr\u5B57\u7B26\u4E32\u662F\u5426\u662F\u4EE5char\u5B57\u7B26\u4E32\u5F00\u59CB</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
<span class="token comment">//\u5224\u65ADstr\u5B57\u7B26\u4E32\u662F\u5426\u662F\u4EE5char\u5B57\u7B26\u4E32\u7ED3\u675F</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>

<span class="token comment">// \u7B2C\u4E8C\u4E2A\u53C2\u6570\u8868\u793A\u5F00\u59CB\u641C\u7D22\u7684\u4F4D\u7F6E</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span>
s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// true \u7D22\u5F15\u5411\u524D\u67E5</span>
s<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// true \u7D22\u5F15\u5411\u540E\u67E5</span>
s<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// false \u7D22\u5F15\u5411\u524D\u67E5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>repeat()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;x&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// xxx</span>
<span class="token string">&#39;x&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// &#39;&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>padStart() \u548C padEnd() \u586B\u5145\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span>
<span class="token comment">//\u5C06str\u586B\u5145\u4E3A8\u4F4D\u957F\u5EA6\uFF0C\u4F7F\u7528 - \u6765\u8FDB\u884C\u586B\u5145\uFF0C\u586B\u5145\u5728\u5B57\u7B26\u4E32\u7684\u5DE6\u8FB9</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// -----abc</span>
<span class="token comment">//\u5C06str\u586B\u5145\u4E3A8\u4F4D\u957F\u5EA6\uFF0C\u4F7F\u7528 we \u6765\u586B\u5145\uFF0C\u586B\u5145\u5728\u5B57\u7B26\u4E32\u7684\u53F3\u8FB9</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;we&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//abcwewew</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>trimStart() \u548C trimEnd()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u65B0\u589E\u5B57\u7B26\u4E32 \u4E0D\u6539\u53D8\u539F\u59CB\u5B57\u7B26\u4E32 \u6240\u4EE5const\u6CA1\u95EE\u9898</span>
<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token string">&#39;  abc  &#39;</span>
s<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;abc&#39;</span>
s<span class="token punctuation">.</span><span class="token function">trimStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;abc  &#39;</span>
s<span class="token punctuation">.</span><span class="token function">trimEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;  abc&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>replaceAll() \u66FF\u6362\u6240\u6709\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;aabbcc&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;aa_bcc&#39;</span>

<span class="token string">&#39;aabbcc&#39;</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;aa__cc&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_4-\u6570\u503C\u65B0\u589E\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-\u6570\u503C\u65B0\u589E\u65B9\u6CD5" aria-hidden="true">#</a> 4 \u6570\u503C\u65B0\u589E\u65B9\u6CD5</h2><ul><li>Number.parseInt() \u548C Number.parseFloat()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5\u7684\u5199\u6CD5</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12.34&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 12</span>
<span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;123.45#&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123.45</span>

<span class="token comment">// ES6\u7684\u5199\u6CD5</span>
Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12.34&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 12</span>
Number<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;123.45#&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123.45</span>

<span class="token comment">// \u4E8C\u8005\u5B8C\u5168\u4E00\u81F4 \u53EA\u662F\u4E3A\u4E86\u51CF\u5C11\u5168\u5C40\u65B9\u6CD5 \u9010\u6B65\u6A21\u5757\u5316</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>Number.isInteger()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD\u6570\u5B57\u662F\u5426\u4E3A\u6574\u6570</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_5-\u65B0\u589E\u51FD\u6570\u5199\u6CD5" tabindex="-1"><a class="header-anchor" href="#_5-\u65B0\u589E\u51FD\u6570\u5199\u6CD5" aria-hidden="true">#</a> 5 \u65B0\u589E\u51FD\u6570\u5199\u6CD5</h2><h3 id="_5-1-\u5F62\u53C2\u8BBE\u7F6E\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#_5-1-\u5F62\u53C2\u8BBE\u7F6E\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> 5.1 \u5F62\u53C2\u8BBE\u7F6E\u9ED8\u8BA4\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">5</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5728\u51FD\u6570\u8C03\u7528\u65F6\uFF0C\u5982\u679C\u4E0D\u4F20\u5165\u5B9E\u53C2\uFF0C\u5219\u4F7F\u7528\u9ED8\u8BA4\u503C</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//8</span>
<span class="token comment">//\u5982\u679C\u4F20\u5165\u5B9E\u53C2\uFF0C\u5219\u6309\u7167\u5B9E\u53C2\u8FDB\u884C\u8FD0\u7B97</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment">//30</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-2-\u89E3\u6784\u8D4B\u503C\u548C\u5F62\u53C2\u9ED8\u8BA4\u503C\u914D\u5408" tabindex="-1"><a class="header-anchor" href="#_5-2-\u89E3\u6784\u8D4B\u503C\u548C\u5F62\u53C2\u9ED8\u8BA4\u503C\u914D\u5408" aria-hidden="true">#</a> 5.2 \u89E3\u6784\u8D4B\u503C\u548C\u5F62\u53C2\u9ED8\u8BA4\u503C\u914D\u5408</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u51FD\u6570\u53C2\u6570\u4F20\u5165\u4E86\u4E00\u4E2A\u5BF9\u8C61</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//15</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//70</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_5-3-rest-\u53C2\u6570-\u53EF\u53D8\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_5-3-rest-\u53C2\u6570-\u53EF\u53D8\u53C2\u6570" aria-hidden="true">#</a> 5.3 rest \u53C2\u6570\uFF08\u53EF\u53D8\u53C2\u6570\uFF09</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// rest\u53C2\u6570: \u5728es6 \u4F7F\u7528 rest\u53C2\u6570\u6765\u4EE3\u66FF arguments</span>
<span class="token comment">//\u540Cargument\u6548\u679C\u4E00\u81F4  \u53EF\u4EE5\u5224\u65AD\u4F20\u5165\u7684\u5B9E\u53C2\u4E2A\u6570 \u5E76\u4E14\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u8F93\u51FA</span>
<span class="token keyword">function</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//...\u662F\u5173\u952E \u540E\u9762\u5F62\u53C2\u65E0\u6240\u8C13</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token comment">//\u4F1A\u5C06\u4F20\u5165\u7684\u5B9E\u53C2\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u4FDD\u5B58\u8D77\u6765</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>add: Array.from() \u53EF\u4EE5\u628A\u4F2A\u6570\u7EC4\u8F6C\u4E3A\u6570\u7EC4</p><h3 id="_5-4-\u51FD\u6570\u7684-name-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_5-4-\u51FD\u6570\u7684-name-\u5C5E\u6027" aria-hidden="true">#</a> 5.4 \u51FD\u6570\u7684 name \u5C5E\u6027</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
foo<span class="token punctuation">.</span>name <span class="token comment">// &quot;foo&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_5-4-\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_5-4-\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> 5.4 \u7BAD\u5934\u51FD\u6570</h3><p>\u51FD\u6570\u7684\u53E6\u4E00\u79CD\u4E66\u5199\u65B9\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u58F0\u660E\u4E00\u4E2A\u7BAD\u5934\u51FD\u6570</span>
<span class="token keyword">let</span> <span class="token function-variable function">show</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> word</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>word<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;\u76D6\u4F26&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E00\u4EE3\u7248\u672C\u4E00\u4EE3\u795E\uFF0C\u4EE3\u4EE3\u7248\u672C\u73A9\u76D6\u4F26&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token number">10</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>\u7BAD\u5934\u51FD\u6570\u7684\u7279\u6B8A\u70B9\uFF1A <ul><li>\u7BAD\u5934\u51FD\u6570\u4E0D\u80FD\u4F5C\u4E3A\u6784\u9020\u51FD\u6570</li><li>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709 arguments\uFF0C\u8981\u4F7F\u7528\u53EF\u53D8\u53C2\u6570\u53EF\u4EE5\u4F7F\u7528 rest \u65B9\u5F0F</li><li>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709 this \u5BF9\u8C61\uFF0C\u5728\u7BAD\u5934\u51FD\u6570\u4E2D\u7684 this \u6307\u7684\u51FD\u6570\u5916\u5C42\u7684\u5BF9\u8C61</li><li>\u5982\u679C\u51FD\u6570\u4F53\u53EA\u6709\u4E00\u53E5\u5E76\u4E14\u8BBE\u7F6E\u4E86\u8FD4\u56DE\u503C\uFF0C\u5219\u4E0D\u9700\u8981\u4F7F\u7528\u5927\u62EC\u53F7\uFF0C\u4E0D\u9700\u8981 return</li><li>\u5982\u679C\u51FD\u6570\u4E2D\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u5219\u4E0D\u9700\u8981\u5199\u5C0F\u62EC\u53F7</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//1. \u7BAD\u5934\u51FD\u6570\u4E0D\u662F\u4E00\u4E2A\u6784\u9020\u5668\uFF0C\u4E0D\u80FD\u7528\u6765\u5B9E\u4F8B\u5316</span>
<span class="token keyword">let</span> <span class="token function-variable function">person</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name
  <span class="token keyword">this</span><span class="token punctuation">.</span>age
<span class="token punctuation">}</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// persion is not a constructor</span>

<span class="token comment">//2. \u7BAD\u5934\u51FD\u6570\u6CA1\u6709arguments</span>
<span class="token comment">//\u8981\u4F7F\u7528rest\u6765\u63A5\u6536\u53EF\u53D8\u53C2\u6570</span>
<span class="token keyword">var</span> <span class="token function-variable function">show</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//console.log(arguments); //\u62A5\u9519</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//3. \u7BAD\u5934\u51FD\u6570\u4E2D\u7684this\u95EE\u9898</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//this\u6307\u7684\u5C31\u662Fbutton\u6309\u94AE</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;\u8C01\u70B9\u8C01\u53D1\u8D22&#39;</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5F53\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u65F6\uFF0Cthis\u5BF9\u8C61\u5C31\u4E0D\u662F\u6309\u94AE\u5BF9\u8C61\u800C\u662F \u5916\u5C42\u7684\u5BF9\u8C61, \u6B64\u5904\u5C31\u662F window \u5BF9\u8C61</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;\u8C01\u70B9\u8C01\u53D1\u8D22&#39;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token function-variable function">c</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;\u8C01\u70B9\u8C01\u53D1\u8D22&#39;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="_6-\u6570\u7EC4\u65B9\u6CD5\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_6-\u6570\u7EC4\u65B9\u6CD5\u6269\u5C55" aria-hidden="true">#</a> 6 \u6570\u7EC4\u65B9\u6CD5\u6269\u5C55</h2><ul><li>Array.from(): \u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6570\u7EC4</span>
<span class="token keyword">let</span> arrayLike <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u6CE8\u610F: \u8F6C\u5316\u65F6\u5BF9\u539F\u6570\u636E\u6709\u8981\u6C42 key\u503C\u8981\u4ECE0\u5F00\u59CB \u4E14\u6709length\u5B57\u6BB5</span>
<span class="token comment">// ES5\u7684\u5199\u6CD5</span>
<span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>
<span class="token comment">// ES6\u7684\u5199\u6CD5</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>

<span class="token comment">// \u4E5F\u53EF\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6570\u7EC4</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;]</span>
<span class="token punctuation">[</span><span class="token operator">...</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span> <span class="token comment">// [&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;]</span>

<span class="token comment">// \u53C2\u65702 \u76F8\u5F53\u4E8Emap</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">,</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span>

<span class="token comment">// \u53C2\u65703 \u5982\u679Cmap\u51FD\u6570\u91CC\u9762\u7528\u5230\u4E86this\u5173\u952E\u5B57\uFF0C\u8FD8\u53EF\u4EE5\u4F20\u5165Array.from\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0C\u7528\u6765\u7ED1\u5B9Athis</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u4E0D\u80FD\u4F7F\u7528\u7BAD\u5934\u51FD\u6570 \u4F1A\u5BFC\u81F4\u4F20\u5165\u7684this\u6307\u5411\u4E0D\u51C6</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> arrayLike<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ul><li>Array.of(): \u5C06\u4E00\u7EC4\u503C\u8F6C\u6362\u4E3A\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// []</span>
Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment">// [3,11,8]</span>
Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// [3]</span>
Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token comment">// 1</span>

<span class="token comment">// \u6CE8\u610F\u662F\u4E3A\u4E86\u5F25\u8865Array()\u7684\u5DEE\u5F02 \u63A8\u8350\u4F7F\u7528Array.of()</span>
<span class="token function">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// []</span>
<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// [, , ,]</span>
<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment">// [3, 11, 8]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>includes\uFF1A\u5224\u65AD\u4E00\u4E2A\u6570\u7EC4\u4E2D\u662F\u5426\u5305\u542B\u53E6\u4E00\u4E2A\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>find\uFF1A \u8FD4\u56DE\u6EE1\u8DB3\u6761\u4EF6\u7684\u7B2C\u4E00\u4E2A\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//  \u529F\u80FD: \u8FD4\u56DE\u6EE1\u8DB3\u6761\u4EF6\u7684\u7B2C\u4E00\u4E2A\u5355\u5143\u503C \u82E5\u90FD\u4E0D\u7B26\u5408 \u5219\u8FD4\u56DEundefined</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">//100</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p>findIndex\uFF1A \u8FD4\u56DE\u6EE1\u8DB3\u6761\u4EF6\u7684\u7B2C\u4E00\u4E2A\u503C\u7684\u7D22\u5F15 \u82E5\u90FD\u4E0D\u7B26\u5408 \u5219\u8FD4\u56DE-1</p></li><li><p>fill() \u65B9\u6CD5\u4F7F\u7528\u7ED9\u5B9A\u503C\uFF0C\u586B\u5145\u4E00\u4E2A\u6570\u7EC4</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment">// [7, 7, 7]</span>

<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment">// [7, 7, 7]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>entries() keys() values()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u4EE5\u7528for...of\u5FAA\u73AF\u8FDB\u884C\u904D\u5386</span>
<span class="token comment">// \u552F\u4E00\u7684\u533A\u522B\u662Fkeys()\u662F\u5BF9\u952E\u540D\u7684\u904D\u5386</span>
<span class="token comment">// values()\u662F\u5BF9\u952E\u503C\u7684\u904D\u5386</span>
<span class="token comment">// entries()\u662F\u5BF9\u952E\u503C\u5BF9\u7684\u904D\u5386</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0</span>
<span class="token comment">// 1</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> elem <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &#39;a&#39;</span>
<span class="token comment">// &#39;b&#39;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>index<span class="token punctuation">,</span> elem<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> elem<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0 &quot;a&quot;</span>
<span class="token comment">// 1 &quot;b&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>flat() flatMap()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// flat()\u7528\u4E8E\u5C06\u5D4C\u5957\u7684\u6570\u7EC4\u201C\u62C9\u5E73\u201D</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// [1,2,3,4]</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token comment">// flatMap()\u65B9\u6CD5\u5BF9\u539F\u6570\u7EC4\u7684\u6BCF\u4E2A\u6210\u5458\u6267\u884C\u4E00\u4E2A\u51FD\u6570\uFF08\u76F8\u5F53\u4E8E\u6267\u884CArray.prototype.map()\uFF09</span>
<span class="token comment">// \u76F8\u5F53\u4E8E [[2, 4], [3, 6], [4, 8]].flat()</span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 4, 3, 6, 4, 8]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_7-\u5BF9\u8C61\u7684\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_7-\u5BF9\u8C61\u7684\u6269\u5C55" aria-hidden="true">#</a> 7 \u5BF9\u8C61\u7684\u6269\u5C55</h2><h3 id="_7-1-\u5BF9\u8C61\u5199\u6CD5\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_7-1-\u5BF9\u8C61\u5199\u6CD5\u6269\u5C55" aria-hidden="true">#</a> 7.1 \u5BF9\u8C61\u5199\u6CD5\u6269\u5C55</h3><ul><li>\u4F7F\u7528\u8868\u8FBE\u5F0F\u4F5C\u4E3A key \u540D</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53D8\u91CF/\u8868\u8FBE\u5F0F \u5B9A\u4E49key\u540D</span>
<span class="token keyword">let</span> propKey <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;bc&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8868\u8FBE\u5F0F\u5B9A\u4E49\u65B9\u6CD5\u540D</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token string">&#39;h&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;ello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;hi&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// hi</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u5408\u5E76\u4E24\u4E2A\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ab <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b <span class="token punctuation">}</span>
<span class="token keyword">let</span> ab <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assgin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_7-2-\u5BF9\u8C61\u65B0\u589E\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_7-2-\u5BF9\u8C61\u65B0\u589E\u65B9\u6CD5" aria-hidden="true">#</a> 7.2 \u5BF9\u8C61\u65B0\u589E\u65B9\u6CD5</h3><ul><li>Object.is()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token comment">// true</span>
  <span class="token comment">// \u4E3A\u4E86\u5F25\u8865 == \u548C ===\u7684\u4E0D\u8DB3</span>
  <span class="token number">0</span> <span class="token operator">===</span>
  <span class="token operator">-</span><span class="token number">0</span> <span class="token comment">//true</span>
<span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span> <span class="token comment">// false</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>Object.keys() Object.values()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Object.keys() \u83B7\u53D6\u5BF9\u8C61\u7684key\u503C \u4EE5\u6570\u7EC4\u5F62\u5F0F\u8FD4\u56DE \u591A\u7528\u4E8E\u904D\u5386</span>
<span class="token comment">// Object.values() \u83B7\u53D6\u5BF9\u8C61\u7684values\u503C \u4EE5\u6570\u7EC4\u5F62\u5F0F\u8FD4\u56DE \u591A\u7528\u4E8E\u904D\u5386</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> keys<span class="token punctuation">,</span> values<span class="token punctuation">,</span> entries <span class="token punctuation">}</span> <span class="token operator">=</span> Object
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> <span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">// &#39;a&#39;, &#39;b&#39;, &#39;c&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> <span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// 1, 2, 3</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;a&#39;, 1], [&#39;b&#39;, 2], [&#39;c&#39;, 3]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>Object.assign()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E00 \u57FA\u7840:</span>

<span class="token comment">// 1.\u6CE8\u610F: \u6D45\u62F7\u8D1D \u540E\u9762\u4F1A\u66FF\u6362\u524D\u9762\u7684\u540C\u540D\u5C5E\u6027</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source1<span class="token punctuation">,</span> source2<span class="token punctuation">)</span>
<span class="token comment">// 2.\u4E5F\u53EF\u4EE5\u7528\u6765\u5408\u5E76\u6570\u7EC4 \u4F46\u662F\u4F1A\u628A\u6570\u7EC4\u89C6\u4E3A\u5BF9\u8C61</span>
<span class="token comment">// \u5B9E\u9645\u4E0A\u662F\u5408\u5E76\u4E86{0:1,1:2,2:3} {0:4,1:5}\u4E24\u4E2A\u5BF9\u8C61</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [4,5,3]</span>
<span class="token comment">// 3.\u53D6\u503C\u51FD\u6570\u7684\u5904\u7406</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">get</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// source\u4E2D\u7684get foo\u51FD\u6570 \u4F1A\u88AB\u6267\u884C</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> source<span class="token punctuation">)</span> <span class="token comment">// { foo: 1 }</span>

<span class="token comment">// \u4E8C \u5E38\u89C1\u7528\u6CD5:</span>
<span class="token comment">// 1.\u7ED9\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// this.x = x</span>
    <span class="token comment">// this.y = y</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2.\u7ED9\u5BF9\u8C61\u6DFB\u52A0\u65B9\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">sayAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;i am 18 years old&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 3.\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61</span>
<span class="token keyword">const</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> <span class="token operator">...</span>sources</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token operator">...</span>sources<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="_7-for-in-\u548C-for-of-\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_7-for-in-\u548C-for-of-\u533A\u522B" aria-hidden="true">#</a> 7 for in \u548C for of \u533A\u522B</h2><ul><li><p>for...in es5</p><blockquote><p>\u904D\u5386\u7684\u662F key \u540D \u6570\u7EC4\u62FF\u5230\u7684\u662F\u7D22\u5F15 \u5BF9\u8C61\u62FF\u5230\u7684\u662F key</p></blockquote></li><li><p>for...of es6</p><blockquote><p>\u904D\u5386\u7684\u7ED3\u679C\u662F value for of \u4E0D\u80FD\u76F4\u63A5\u904D\u5386\u5BF9\u8C61 \u9700\u8981\u914D\u5408 Object.keys(obj)</p></blockquote></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u904D\u5386\u51FA\u6765\u7684\u662F</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">// key \u503C</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// value\u503C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_8-\u8FD0\u7B97\u7B26\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_8-\u8FD0\u7B97\u7B26\u6269\u5C55" aria-hidden="true">#</a> 8 \u8FD0\u7B97\u7B26\u6269\u5C55</h2><ul><li>\u94FE\u5224\u65AD\u8FD0\u7B97\u7B26</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD?\u5DE6\u4FA7\u5BF9\u8C61\u662F\u5426\u4E3Anull\u6216\u8005undefined</span>
<span class="token keyword">const</span> firstName <span class="token operator">=</span> message<span class="token operator">?.</span>body<span class="token operator">?.</span>user<span class="token operator">?.</span>firstName <span class="token operator">||</span> <span class="token string">&#39;default&#39;</span>
<span class="token comment">// \u51FD\u6570\u8C03\u7528: \u82E5obj\u4E0B\u5B58\u5728foo \u5219\u8C03\u7528</span>
obj<span class="token punctuation">.</span>foo<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>null \u5224\u65AD\u8FD0\u7B97\u7B26</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD??\u524D\u7684\u503C\u662F\u5426\u4E3Anull\u6216\u8005undefined</span>
<span class="token keyword">const</span> animationDuration <span class="token operator">=</span> response<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>animationDuration <span class="token operator">??</span> <span class="token number">300</span>
<span class="token comment">// \u4E5F\u53EF\u4EE5\u914D\u5408?\u4F7F\u7528: response.settings\u662Fnull\u6216undefined \u6216\u8005response.settings.animationDuration\u662Fnull\u6216undefined \u8FD4\u56DE300</span>
<span class="token keyword">const</span> animationDuration <span class="token operator">=</span> response<span class="token punctuation">.</span>settings<span class="token operator">?.</span>animationDuration <span class="token operator">??</span> <span class="token number">300</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u903B\u8F91\u8D4B\u503C\u8FD0\u7B97\u7B26</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6216\u8D4B\u503C\u8FD0\u7B97\u7B26</span>
x <span class="token operator">||=</span> y
<span class="token comment">// \u7B49\u540C\u4E8E</span>
x <span class="token operator">||</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span>

<span class="token comment">// \u4E0E\u8D4B\u503C\u8FD0\u7B97\u7B26</span>
x <span class="token operator">&amp;&amp;=</span> y
<span class="token comment">// \u7B49\u540C\u4E8E</span>
x <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span>

<span class="token comment">// Null \u8D4B\u503C\u8FD0\u7B97\u7B26</span>
x <span class="token operator">??=</span> y
<span class="token comment">// \u7B49\u540C\u4E8E</span>
x <span class="token operator">??</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span>

<span class="token comment">// \u5B9E\u9645\u573A\u666F:</span>
user<span class="token punctuation">.</span>id <span class="token operator">||=</span> <span class="token number">1</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
user<span class="token punctuation">.</span>id <span class="token operator">=</span> user<span class="token punctuation">.</span>id <span class="token operator">||</span> <span class="token number">1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_9-symbol" tabindex="-1"><a class="header-anchor" href="#_9-symbol" aria-hidden="true">#</a> 9 Symbol</h2><blockquote><p>es5 \u4E2D\u7684\u5BF9\u8C61\u5C5E\u6027\u540D\u90FD\u662F\u5B57\u7B26\u4E32,\u5BFC\u81F4\u5C5E\u6027\u540D\u5B57\u5BB9\u6613\u51B2\u7A81.es6 \u4E2D Symbol \u7684\u5F15\u5165\u53EF\u4EE5\u907F\u514D\u8BE5\u95EE\u9898</p></blockquote><blockquote><p>js \u4E2D\u7684\u57FA\u672C\u6570\u636E\u7C7B\u578B: null undefined string boolaen number object Symbol</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Symbol\u51FD\u6570\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u53C2\u6570\uFF0C</span>
<span class="token comment">// \u8868\u793A\u5BF9 Symbol \u5B9E\u4F8B\u7684\u63CF\u8FF0\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u5728\u63A7\u5236\u53F0\u663E\u793A</span>
<span class="token comment">// \u6216\u8005\u8F6C\u4E3A\u5B57\u7B26\u4E32\u65F6\uFF0C\u6BD4\u8F83\u5BB9\u6613\u533A\u5206\u3002</span>
<span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>
s1 <span class="token comment">// Symbol(foo)</span>
s2 <span class="token comment">// Symbol(bar)</span>
s1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Symbol(foo)&quot;</span>
s2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Symbol(bar)&quot;</span>

<span class="token comment">// \u82E5\u5728Symbol\u91CC\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61 \u5219Symbol\u4F1A\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684toString()\u65B9\u6CD5\u5C06\u5BF9\u8C61\u8F6C\u4E3A\u5B57\u7B26\u4E32 \u7136\u540E\u751F\u6210Symbol</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;abc&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
sym <span class="token comment">// Symbol(abc)</span>

<span class="token comment">// Symbol\u53EA\u662F\u5F53\u524D\u503C\u7684\u63CF\u8FF0 \u4E24\u4E2ASymbol\u8FD4\u56DE\u503C\u662F\u4E0D\u76F8\u7B49\u7684</span>
<span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
s1 <span class="token operator">===</span> s2 <span class="token comment">// false</span>
<span class="token keyword">let</span> a1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> a2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
a1 <span class="token operator">===</span> a2 <span class="token comment">// false</span>

<span class="token comment">// Symbol\u4E0D\u80FD\u53C2\u4E0E\u8FD0\u7B97</span>
<span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;My symbol&#39;</span><span class="token punctuation">)</span>
<span class="token string">&#39;your symbol is &#39;</span> <span class="token operator">+</span>
  sym <span class="token comment">// TypeError: can&#39;t convert symbol to string</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">your symbol is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sym<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token comment">// TypeError: can&#39;t convert symbol to string</span>
<span class="token comment">// \u4F46\u662F\u53EF\u4EE5\u901A\u8FC7\u663E\u5F0F\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</span>
<span class="token string">&#39;your symbol is &#39;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// your symbol is My symbol</span>
<span class="token comment">// \u4E5F\u53EF\u8F6C\u6362\u4E3A\u5E03\u5C14\u503C</span>
<span class="token function">Boolean</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token comment">// \u4F46\u662F\u4E0D\u80FD\u8F6C\u6362\u4E3ANumber</span>
<span class="token function">Number</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// TypeError</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="_9-1-\u83B7\u53D6-symbol-\u7684\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#_9-1-\u83B7\u53D6-symbol-\u7684\u63CF\u8FF0" aria-hidden="true">#</a> 9.1 \u83B7\u53D6 Symbol \u7684\u63CF\u8FF0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
sym<span class="token punctuation">.</span>description <span class="token comment">// foo</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_9-2-symbol-\u4F5C\u4E3A\u5C5E\u6027\u540D" tabindex="-1"><a class="header-anchor" href="#_9-2-symbol-\u4F5C\u4E3A\u5C5E\u6027\u540D" aria-hidden="true">#</a> 9.2 Symbol \u4F5C\u4E3A\u5C5E\u6027\u540D</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u8BBE\u7F6E\u5C5E\u6027</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>sym<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8BFB\u53D6: \u6CE8\u610F: \u6B64\u5904obj.sym\u4E0D\u53EF\u4EE5</span>
obj<span class="token punctuation">[</span>sym<span class="token punctuation">]</span> <span class="token comment">// hello</span>

<span class="token comment">// \u8BBE\u7F6E\u51FD\u6570</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
obj<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_9-3-\u66FF\u6362\u9B54\u672F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_9-3-\u66FF\u6362\u9B54\u672F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 9.3 \u66FF\u6362\u9B54\u672F\u5B57\u7B26\u4E32</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> shapeType <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// triangle: &#39;Triangle&#39; // \u6B64\u5904\u7684Triangle\u5C31\u662F\u9B54\u672F\u5B57\u7B26\u4E32\u5F3A\u8026\u5408 \u4E0D\u5229\u4E8E\u7EF4\u62A4</span>
  <span class="token literal-property property">triangle</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u66FF\u6362\u4E3ASymbol</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token parameter">shape<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> area <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> shapeType<span class="token punctuation">.</span>triangle<span class="token operator">:</span>
      area <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> options<span class="token punctuation">.</span>width <span class="token operator">*</span> options<span class="token punctuation">.</span>height
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> area
<span class="token punctuation">}</span>

<span class="token function">getArea</span><span class="token punctuation">(</span>shapeType<span class="token punctuation">.</span>triangle<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_9-4-\u5C5E\u6027\u540D\u7684\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_9-4-\u5C5E\u6027\u540D\u7684\u904D\u5386" aria-hidden="true">#</a> 9.4 \u5C5E\u6027\u540D\u7684\u904D\u5386</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// for...in\u3001for...of</span>
<span class="token comment">// Object.keys()\u3001Object.getOwnPropertyNames()\u3001JSON.stringify()</span>
<span class="token comment">// \u8FD9\u4E9B\u4F1A\u5FFD\u7565Symbol\u5C5E\u6027 \u53EA\u80FD\u901A\u8FC7Object.getOwnPropertySymbols()\u8BBF\u95EE</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [Symbol(a), Symbol(b)]</span>

<span class="token comment">// \u4E5F\u53EF\u4EE5\u901A\u8FC7\u65B0\u7684api Reflect.ownKeys\u83B7\u53D6Symbol\u7684key\u503C</span>
Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// [Symbol(a), Symbol(b)]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_9-5-symbol-for-symbol-keyfor" tabindex="-1"><a class="header-anchor" href="#_9-5-symbol-for-symbol-keyfor" aria-hidden="true">#</a> 9.5 Symbol.for() Symbol.keyFor()</h3><ul><li>Symbol.for()</li></ul><blockquote><p>Symbol \u539F\u7406:Symbol.for()\u4E0E Symbol()\u8FD9\u4E24\u79CD\u5199\u6CD5\uFF0C\u90FD\u4F1A\u751F\u6210\u65B0\u7684 Symbol\u3002\u5B83\u4EEC\u7684\u533A\u522B\u662F\uFF0C\u524D\u8005\u4F1A\u88AB\u767B\u8BB0\u5728\u5168\u5C40\u73AF\u5883\u4E2D\u4F9B\u641C\u7D22\uFF0C\u540E\u8005\u4E0D\u4F1A\u3002Symbol.for()\u4E0D\u4F1A\u6BCF\u6B21\u8C03\u7528\u5C31\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Symbol \u7C7B\u578B\u7684\u503C\uFF0C\u800C\u662F\u4F1A\u5148\u68C0\u67E5\u7ED9\u5B9A\u7684 key \u662F\u5426\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u624D\u4F1A\u65B0\u5EFA\u4E00\u4E2A\u503C\u3002\u6BD4\u5982\uFF0C\u5982\u679C\u4F60\u8C03\u7528 Symbol.for(&quot;cat&quot;)30 \u6B21\uFF0C\u6BCF\u6B21\u90FD\u4F1A\u8FD4\u56DE\u540C\u4E00\u4E2A Symbol \u503C\uFF0C\u4F46\u662F\u8C03\u7528 Symbol(&quot;cat&quot;)30 \u6B21\uFF0C\u4F1A\u8FD4\u56DE 30 \u4E2A\u4E0D\u540C\u7684 Symbol \u503C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Symbol()\u521B\u5EFA\u7684\u503C\u662F\u4E0D\u91CD\u590D\u7684 Symbol.for\u53EF\u521B\u5EFA\u91CD\u590D\u7684\u503C</span>
Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>Symbol.keyFor()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Symbol.keyFor()\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5DF2\u767B\u8BB0\u7684 Symbol \u7C7B\u578B\u503C\u7684key</span>
<span class="token keyword">let</span> s1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token comment">// &quot;foo&quot;</span>

<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Symbol\u662F\u4E0D\u767B\u8BB0\u7684 \u6240\u4EE5\u8FD4\u56DEundefined</span>
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token comment">// undefined</span>

<span class="token comment">// \u6CE8\u610F: Symbol.keyFor\u767B\u8BB0\u662F\u5168\u5C40\u7684</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> y <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">===</span> y<span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token comment">// \u53EF\u7528\u6B64\u7279\u6027\u8FDB\u884Ciframe\u4F20\u503C</span>
iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;iframe&#39;</span><span class="token punctuation">)</span>
iframe<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">)</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iframe<span class="token punctuation">)</span>
iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_10-set-\u548C-map-\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_10-set-\u548C-map-\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> 10 Set \u548C Map \u6570\u636E\u7ED3\u6784</h2><h3 id="_10-1-set" tabindex="-1"><a class="header-anchor" href="#_10-1-set" aria-hidden="true">#</a> 10.1 Set</h3><blockquote><p>Set \u662F es6 \u65B0\u589E\u7684\u6570\u636E\u7ED3\u6784 \u7C7B\u4F3C\u4E8E\u6570\u7EC4 \u4F46\u6210\u5458\u552F\u4E00 \u4E0D\u4F1A\u91CD\u590D Set\u672C\u8EAB\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570 \u53EF\u4EE5\u751F\u6210 Set \u6570\u636E\u7ED3\u6784</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2 3 5 4</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u901A\u8FC7set\u8FDB\u884C\u6570\u7EC4\u53BB\u91CD</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">dedupe</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Array.from\u53EF\u4EE5\u8BB2Set\u6570\u636E\u7C7B\u578B\u8F6C\u6362\u4E3AArray</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">dedupe</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3]</span>
<span class="token comment">// \u901A\u8FC7set\u8FDB\u884C\u5B57\u7B26\u4E32\u53BB\u91CD</span>
<span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">&#39;ababbc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// join:\u6570\u7EC4\u8F6C\u4E3A\u5B57\u7B26\u4E32</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_10-1-1-set-\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_10-1-1-set-\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5" aria-hidden="true">#</a> 10.1.1 Set \u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</h4><ul><li><p>\u5C5E\u6027:</p><ul><li>Set.prototype.constructor\uFF1A\u6784\u9020\u51FD\u6570\uFF0C\u9ED8\u8BA4\u5C31\u662F Set \u51FD\u6570\u3002</li><li>Set.prototype.size\uFF1A\u8FD4\u56DE Set \u5B9E\u4F8B\u7684\u6210\u5458\u603B\u6570\u3002</li></ul></li><li><p>\u65B9\u6CD5:</p><ul><li><p>Set.prototype.add(value)\uFF1A\u6DFB\u52A0\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE Set \u7ED3\u6784\u672C\u8EAB\u3002</p></li><li><p>Set.prototype.delete(value)\uFF1A\u5220\u9664\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u5220\u9664\u662F\u5426\u6210\u529F\u3002</p></li><li><p>Set.prototype.has(value)\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u8BE5\u503C\u662F\u5426\u4E3A Set \u7684\u6210\u5458\u3002</p></li><li><p>Set.prototype.clear()\uFF1A\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</p></li><li><p>Set.prototype.keys()\uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668</p></li><li><p>Set.prototype.values()\uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668</p><blockquote><p>keys \u548C values \u65B9\u6CD5\u5B8C\u5168\u4E00\u81F4 \u8FD4\u56DE\u7684\u90FD\u662F Iterator \u5BF9\u8C61</p></blockquote></li><li><p>Set.prototype.entries()\uFF1A\u8FD4\u56DE\u952E\u503C\u5BF9\u7684\u904D\u5386\u5668</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  <span class="token comment">// [&quot;red&quot;, &quot;red&quot;]</span>
  <span class="token comment">// [&quot;green&quot;, &quot;green&quot;]</span>
  <span class="token comment">// [&quot;blue&quot;, &quot;blue&quot;]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>Set.prototype.forEach()\uFF1A\u4F7F\u7528\u56DE\u8C03\u51FD\u6570\u904D\u5386\u6BCF\u4E2A\u6210\u5458</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// forEach for of\u90FD\u53EF\u4EE5</span>
<span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
  <span class="token comment">// red</span>
  <span class="token comment">// green</span>
  <span class="token comment">// blue</span>
<span class="token punctuation">}</span>
set<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token comment">// red</span>
  <span class="token comment">// green</span>
  <span class="token comment">// blue</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E5F\u53EF\u95F4\u63A5\u4F7F\u7528\u6570\u7EC4\u7684\u65B9\u6CD5</span>
<span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>set<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// \u8FD4\u56DESet\u7ED3\u6784\uFF1A{2, 4, 6}</span>
<span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>set<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u5E76\u96C6\u4EA4\u96C6\u5DEE\u96C6\u7684\u5B9E\u73B0</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u5E76\u96C6</span>
<span class="token keyword">let</span> union <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// Set {1, 2, 3, 4}</span>

<span class="token comment">// \u4EA4\u96C6</span>
<span class="token keyword">let</span> intersect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// set {2, 3}</span>

<span class="token comment">// \uFF08a \u76F8\u5BF9\u4E8E b \u7684\uFF09\u5DEE\u96C6</span>
<span class="token keyword">let</span> difference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Set {1}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div></li></ul><h3 id="_10-2-weakset" tabindex="-1"><a class="header-anchor" href="#_10-2-weakset" aria-hidden="true">#</a> 10.2 WeakSet</h3><blockquote><p>WackSet \u63A5\u53E3\u548C Set \u7C7B\u4F3C \u4E5F\u662F\u4E0D\u91CD\u590D\u503C\u7684\u96C6\u5408 \u4F46\u662F\u5B83\u50A8\u5B58\u7684\u53EA\u80FD\u662F\u5BF9\u8C61 WeakSet \u4E2D\u7684\u5BF9\u8C61\u90FD\u662F\u5F31\u7C7B\u578B\u5F15\u7528 \u5176\u4ED6\u5BF9\u8C61\u4E0D\u518D\u5BF9\u5176\u5F15\u7528\u65F6 \u4F1A\u88AB js \u5783\u573E\u56DE\u6536\u673A\u5236\u56DE\u6536 \u5176\u4F59\u7565 \u8BE6\u60C5: <a target="_blank" href="https://es6.ruanyifeng.com/#docs/set-map#WeakSet">WeakSet</a></p></blockquote><h3 id="_10-3-map" tabindex="-1"><a class="header-anchor" href="#_10-3-map" aria-hidden="true">#</a> 10.3 Map</h3><blockquote><p>\u5BF9\u8C61\u6570\u636E\u7ED3\u6784\u4E2D key \u503C\u53EA\u80FD\u662F\u5B57\u7B26\u4E32(\u5B57\u7B26\u4E32-\u503C) Map \u53EF\u4EE5\u4EFB\u610F\u503C\u5F53\u4F5C key \u503C(\u503C-\u503C)</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token string">&#39;Hello World&#39;</span> <span class="token punctuation">}</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// &quot;content&quot;</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token comment">// false</span>
m<span class="token punctuation">.</span>size <span class="token comment">// 1</span>
<span class="token comment">// \u5B9E\u9645\u5E94\u7528</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&#39;\u5C0F\u7EA2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u7B2C\u4E00&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// key, value</span>
    <span class="token punctuation">[</span><span class="token string">&#39;\u5C0F\u660E&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u7B2C\u4E8C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;\u5C0F\u7EFF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u7B2C\u4E09&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
  <span class="token comment">// new Map\u65F6 \u53C2\u6570\u9700\u8981\u4E8C\u5143\u6570\u7EC4 \u4E5F\u53EF\u4EE5\u58F0\u660E\u5BF9\u8C61 \u7136\u540E\u901A\u8FC7Object.entries\u6784\u5EFA</span>
  <span class="token comment">// const val = {</span>
  <span class="token comment">//   &#39;\u5C0F\u7EA2&#39;: &#39;\u7B2C\u4E00&#39;,</span>
  <span class="token comment">//   &#39;\u5C0F\u660E&#39;: &#39;\u7B2C\u4E8C&#39;,</span>
  <span class="token comment">//   &#39;\u5C0F\u7EFF&#39;: &#39;\u7B2C\u4E09&#39;,</span>
  <span class="token comment">// }</span>
  <span class="token comment">// Object.entries(val) // [[&#39;\u5C0F\u7EA2&#39;, &#39;\u7B2C\u4E00&#39;],[&#39;\u5C0F\u660E&#39;, &#39;\u7B2C\u4E8C&#39;],[&#39;\u5C0F\u7EFF&#39;, &#39;\u7B2C\u4E09&#39;]]</span>
  <span class="token keyword">const</span> <span class="token constant">T</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token constant">T</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&#39;\u4E0D\u77E5\u9053&#39;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C0F\u7EA2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="_10-3-1-map-\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_10-3-1-map-\u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5" aria-hidden="true">#</a> 10.3.1 Map \u5B9E\u4F8B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</h4><ul><li><p>\u5C5E\u6027:</p><ul><li><p>size</p></li><li><p>set \u8FD4\u56DE\u7684\u662F Map \u5BF9\u8C61 \u53EF\u91C7\u7528\u94FE\u5F0F\u5199\u6CD5</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>get</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CE8\u610F: \u53EA\u6709\u540C\u4E00\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528 Map\u624D\u5C06\u5176\u89C6\u4E3A\u540C\u4E00\u4E2A\u952E \u6848\u4F8B\u4E2D\u7684\u4E24\u4E2A[&#39;a&#39;]\u5F15\u7528\u4E0D\u540C</span>
<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><p>has</p></li><li><p>delete</p></li><li><p>clear \u6E05\u9664 Map \u4E2D\u7684\u6240\u6709\u6210\u5458 \u65E0\u8FD4\u56DE\u503C</p></li></ul></li><li><p>\u65B9\u6CD5:</p><ul><li>Map.prototype.keys()\uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668\u3002</li><li>Map.prototype.values()\uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668\u3002</li><li>Map.prototype.entries()\uFF1A\u8FD4\u56DE\u6240\u6709\u6210\u5458\u7684\u904D\u5386\u5668\u3002</li><li>Map.prototype.forEach()\uFF1A\u904D\u5386 Map \u7684\u6240\u6709\u6210\u5458</li></ul></li></ul><blockquote><p>map \u8F6C\u4E3A\u6570\u7EC4 \u4F7F\u7528\u6570\u7EC4\u65B9\u6CD5\u540E\u53EF\u4EE5\u518D\u901A\u8FC7 new Map \u8F6C\u6362\u56DE\u6765</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [1, 2, 3]</span>
<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]</span>
<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [[1,&#39;one&#39;], [2, &#39;two&#39;], [3, &#39;three&#39;]]</span>
<span class="token punctuation">[</span><span class="token operator">...</span>map<span class="token punctuation">]</span> <span class="token comment">// [[1,&#39;one&#39;], [2, &#39;two&#39;], [3, &#39;three&#39;]]</span>

<span class="token comment">// \u5BF9\u8C61\u8F6C\u5316\u4E3Amap</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// [[a,1],[b,2]]</span>
<span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_10-4-weakmap" tabindex="-1"><a class="header-anchor" href="#_10-4-weakmap" aria-hidden="true">#</a> 10.4 WeakMap</h3><blockquote><p>WeakMap \u7ED3\u6784\u4E0E Map \u7ED3\u6784\u7C7B\u4F3C\uFF0C\u4E5F\u662F\u7528\u4E8E\u751F\u6210\u952E\u503C\u5BF9\u7684\u96C6\u5408\u3002 \u4F46\u662F WeakMap \u53EA\u63A5\u53D7\u5BF9\u8C61\u4F5C\u4E3A\u952E\u540D \u8BE6\u60C5: <a href="https://es6.ruanyifeng.com/#docs/set-map#Map" target="_blank">WeakMap</a></p></blockquote><h2 id="_11-porxy" tabindex="-1"><a class="header-anchor" href="#_11-porxy" aria-hidden="true">#</a> 11 Porxy</h2><blockquote><p>\u8BE6\u60C5: <a href="https://es6.ruanyifeng.com/#docs/proxy" target="_blank">Porxy</a></p></blockquote><h2 id="_12-reflect" tabindex="-1"><a class="header-anchor" href="#_12-reflect" aria-hidden="true">#</a> 12 Reflect</h2><blockquote><p>\u8BE6\u60C5 <a href="https://es6.ruanyifeng.com/#docs/reflect" target="_blank">Reflect</a></p></blockquote><h2 id="_13-promise" tabindex="-1"><a class="header-anchor" href="#_13-promise" aria-hidden="true">#</a> 13 Promise</h2><ul><li>Promise.any():\u6709\u4E00\u4E2A\u5B50\u5B9E\u4F8B\u6210\u529F\u5C31\u7B97\u6210\u529F\uFF0C\u5168\u90E8\u5B50\u5B9E\u4F8B\u5931\u8D25\u624D\u7B97\u5931\u8D25</li><li>Promise.all():\u5168\u90E8\u5B50\u5B9E\u4F8B\u7684\u6210\u529F\u624D\u7B97\u6210\u529F\uFF0C\u4E00\u4E2A\u5B50\u5B9E\u4F8B\u5931\u8D25\u5C31\u7B97\u5931\u8D25</li><li>Promise.race():\u8D5B\u8DD1\u673A\u5236\uFF0C\u770B\u6700\u5148\u7684 promise \u5B50\u5B9E\u4F8B\u662F\u6210\u529F\u8FD8\u662F\u5931\u8D25</li><li>Promise.allsettled():\u6240\u6709\u5B9E\u4F8B\u6267\u884C\u5B8C\u6210\uFF0C\u65E0\u8BBA\u6210\u529F\u6216\u5931\u8D25</li><li>Promise.resolve(): \u53C2\u6570\u53EF\u4EE5\u63A5\u53D7\u6570\u503C promise \u5B9E\u4F8B thenable \u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>Promise.reject()</li></ul><h2 id="_14-interator-\u548C-for-of" tabindex="-1"><a class="header-anchor" href="#_14-interator-\u548C-for-of" aria-hidden="true">#</a> 14 Interator \u548C for of</h2><p>\u539F\u751F\u5177\u5907 Iterator \u63A5\u53E3\u7684\u6570\u636E\u7ED3\u6784\u5982\u4E0B\u3002</p><ul><li>Array</li><li>Map</li><li>Set</li><li>String</li><li>TypedArray</li><li>\u51FD\u6570\u7684 arguments \u5BF9\u8C61</li><li>NodeList \u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u624B\u5199\u5B9E\u73B0Interator\u63A5\u53E3</span>
<span class="token keyword">const</span> it <span class="token operator">=</span> <span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// it.next() // { value: &quot;a&quot;, done: false }</span>
<span class="token comment">// it.next() // { value: &quot;b&quot;, done: false }</span>
<span class="token comment">// it.next() // { value: undefined, done: true }</span>
<span class="token keyword">function</span> <span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length
        <span class="token operator">?</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span>
        <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u81EA\u5E26\u7684interator\u4F7F\u7528</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: &#39;a&#39;, done: false }</span>
iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: &#39;b&#39;, done: false }</span>
iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7C7B\u65B9\u6CD5\u5B9E\u73B0</span>
<span class="token keyword">class</span> <span class="token class-name">Range</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> stop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> start<span class="token punctuation">,</span> stop <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5173\u952E: for of\u4F1A\u81EA\u52A8\u524D\u5F80\u539F\u578B\u94FE\u4E0A\u5BFB\u627E\u8BE5\u65B9\u6CD5</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6CE8\u610F: \u9700\u8981\u5728\u503C++\u524D\u63A5\u6536\u4E00\u4E0Bvalue\u503C</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>start
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>start<span class="token operator">++</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> value<span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    x
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> value<span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> stop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Range</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E5F\u53EF\u4EE5\u76F4\u63A5\u501F\u7528Array\u539F\u578B\u4E0A\u7684Symbol.iterator</span>
<span class="token class-name">NodeList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span>
<span class="token comment">// \u6216\u8005</span>
<span class="token class-name">NodeList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_15-generator-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_15-generator-\u51FD\u6570" aria-hidden="true">#</a> 15 Generator \u51FD\u6570</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;world&#39;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;ending&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> hw <span class="token operator">=</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6B64\u65F6\u51FD\u6570\u8C03\u7528\u540E\u8FD4\u56DE\u4E00\u4E2AGenerator\u5BF9\u8C61</span>

hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;hello&#39;, done: false }</span>
hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;world&#39;, done: false }</span>
hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;ending&#39;, done: true }</span>
hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: undefined, done: true }</span>

<span class="token comment">// Generator\u65B9\u6CD5:</span>
hw<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u629B\u51FA\u9519\u8BEF</span>
hw<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// { value: &#39;foo&#39;, done: true } \u7ACB\u5373\u7EC8\u6B62\u751F\u6210\u5668 \u8FD4\u56DEreturn\u7684\u53C2\u6570 \u751F\u6210\u5668\u518D\u8C03\u7528\u5219\u662F{ value: undefined, done: true }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><blockquote><p>\u4F7F\u7528\u573A\u666F: \u5904\u7406\u5F02\u6B65\u8BF7\u6C42</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>hitokoto<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u7B2C\u4E8C\u6B21\u8C03\u7528next \u8FD4\u56DE\u5F02\u6B65\u7ED3\u679C \u9690\u85CFloading</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C55\u793Aloading&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;https://v1.hitokoto.cn&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u9690\u85CFloading&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> it <span class="token operator">=</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u9996\u6B21\u8C03\u7528next \u4EE3\u7801\u8D70\u5230yield</span>

<span class="token comment">// \u53E6\u4E00\u79CD\u5199\u6CD5(\u610F\u4E49\u4E0D\u5927)</span>
<span class="token keyword">const</span> <span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">generator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;https://v1.hitokoto.cn&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ajax <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value
ajax
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="_16-async-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_16-async-\u51FD\u6570" aria-hidden="true">#</a> 16 async \u51FD\u6570</h2><ul><li>async \u51FD\u6570\u7684 return \u503C \u4F1A\u53D8\u6210 then \u51FD\u6570\u7684\u53C2\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// generator:</span>
<span class="token keyword">const</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/fstab&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/shells&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// async: \u5B9E\u9645\u4E0A\u5C31\u662F\u5185\u7F6E\u6267\u884C\u5668\u7684generator\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">asyncReadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/fstab&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/shells&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u51FD\u6570\u58F0\u660E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u58F0\u660E\u51FD\u6570</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u9519\u8BEF\u6355\u83B7</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">stop</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u5931\u8D25\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">asyncStop</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6B64\u5904\u62A5\u9519 \u4E0B\u4E00\u4E2Astop\u4E0D\u4F1A\u6267\u884C</span>
  <span class="token keyword">await</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// await stop().catch(err=&gt;console.log(err)) // \u6B64\u5904\u62A5\u9519\u4F46\u662F\u6355\u83B7\u4E86 \u4E0B\u4E00\u4E2Astop\u4F1A\u6267\u884C</span>
  <span class="token comment">// await stop()</span>
<span class="token punctuation">}</span>
<span class="token function">asyncStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u591A\u4E2A\u8BF7\u6C42\u4F9D\u6B21\u53D1\u751F\u65F6 \u8981\u4F7F\u7528 for \u5FAA\u73AF forEach \u7B49\u4E0D\u884C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">dbFuc</span><span class="token punctuation">(</span><span class="token parameter">db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> doc <span class="token keyword">of</span> docs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_17-class" tabindex="-1"><a class="header-anchor" href="#_17-class" aria-hidden="true">#</a> 17 Class</h2><blockquote><p>\u57FA\u672C class \u5E38\u8BC6\u7565</p></blockquote><blockquote><p>\u6CE8\u610F\u70B9: 1.class \u5185\u90E8\u662F\u4E25\u683C\u6A21\u5F0F 2.\u6CA1\u6709\u53D8\u91CF\u63D0\u5347 3.\u6709.name \u5C5E\u6027:class Foo{} Foo.name 4.class \u91CC\u7684\u65B9\u6CD5\u5C3D\u91CF\u4E0D\u8981\u7ED3\u6784 \u4F1A\u5F71\u54CD\u65B9\u6CD5\u5185\u7684 this \u6307\u5411(\u975E\u8981\u7ED3\u6784\u53EF\u624B\u52A8\u6539\u53D8 this \u6307\u5411)</p></blockquote><ul><li>get \u548C set \u5173\u952E\u5B57</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prop <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">getDt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prop <span class="token operator">+</span> <span class="token string">&#39;====&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">set</span> <span class="token function">setDt</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>prop <span class="token operator">=</span> val <span class="token operator">+</span> <span class="token string">&#39;----&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>getDt<span class="token punctuation">)</span>
f<span class="token punctuation">.</span>setDt <span class="token operator">=</span> <span class="token number">123</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>getDt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>clas \u7684\u9759\u6001\u65B9\u6CD5: static \u58F0\u660E \u4E0D\u521B\u5EFA\u5B9E\u4F8B \u76F4\u63A5\u5728 clas \u4E0A\u8C03\u7528</li></ul><h2 id="_18-module-\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#_18-module-\u8BED\u6CD5" aria-hidden="true">#</a> 18 Module \u8BED\u6CD5</h2><ul><li><p>\u548C CommonJS AMD \u6A21\u5757\u5316\u7684\u533A\u522B:</p><ul><li>ES6 \u6A21\u5757\u7684\u8BBE\u8BA1\u601D\u60F3\u662F\u5C3D\u91CF\u7684\u9759\u6001\u5316\uFF0C\u4F7F\u5F97\u7F16\u8BD1\u65F6\u5C31\u80FD\u786E\u5B9A\u6A21\u5757\u7684\u4F9D\u8D56\u5173\u7CFB\uFF0C\u4EE5\u53CA\u8F93\u5165\u548C\u8F93\u51FA\u7684\u53D8\u91CF\u3002CommonJS \u548C AMD \u6A21\u5757\uFF0C\u53EA\u80FD\u5728\u8FD0\u884C\u65F6\u786E\u5B9A</li><li>CommonJS \u6A21\u5757\u8F93\u51FA\u7684\u662F\u4E00\u4E2A\u503C\u7684\u62F7\u8D1D\uFF0CES6 \u6A21\u5757\u8F93\u51FA\u7684\u662F\u503C\u7684\u5F15\u7528</li><li>CommonJS \u6A21\u5757\u7684 require()\u662F\u540C\u6B65\u52A0\u8F7D\u6A21\u5757\uFF0CES6 \u6A21\u5757\u7684 import()\u547D\u4EE4\u662F\u5F02\u6B65\u52A0\u8F7D\uFF0C\u6709\u4E00\u4E2A\u72EC\u7ACB\u7684\u6A21\u5757\u4F9D\u8D56\u7684\u89E3\u6790\u9636\u6BB5\u3002</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// CommonJS\u6A21\u5757</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> stat<span class="token punctuation">,</span> exists<span class="token punctuation">,</span> readfile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> _fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> stat <span class="token operator">=</span> _fs<span class="token punctuation">.</span>stat
<span class="token keyword">let</span> exists <span class="token operator">=</span> _fs<span class="token punctuation">.</span>exists
<span class="token keyword">let</span> readfile <span class="token operator">=</span> _fs<span class="token punctuation">.</span>readfile
<span class="token comment">// \u4E0A\u8FF0\u4EE3\u7801\u5B9E\u9645\u4E0A\u662F\u628A\u6574\u4E2Afs\u6A21\u5757\u5168\u90E8\u5BFC\u5165\u4E86 \u7136\u540E\u518D\u53D6fs\u6A21\u5757\u4E0A\u7684\u7279\u5B9A\u65B9\u6CD5\u3002\u8FD9\u79CD\u52A0\u8F7D\u79F0\u4E3A\u201C\u8FD0\u884C\u65F6\u52A0\u8F7D\u201D: \u53EA\u6709\u518D\u8FD0\u884C\u4EE3\u7801\u7684\u65F6\u5019\u624D\u80FD\u62FF\u5230fs\u5BF9\u8C61 \u6CA1\u6CD5\u505A\u5230\u5728\u7F16\u8BD1\u9636\u6BB5\u8FDB\u884C\u9759\u6001\u4F18\u5316</span>

<span class="token comment">// ES6\u6A21\u5757</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> stat<span class="token punctuation">,</span> exists<span class="token punctuation">,</span> readFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span>
<span class="token comment">// \u76F8\u53CD es6\u7684\u6A21\u5757\u5316\u662F\u901A\u8FC7export\u547D\u4EE4\u663E\u8BD5\u7684\u5BFC\u51FA\u7279\u5B9A\u4EE3\u7801 \u5728\u4F7F\u7528import\u5BFC\u5165 \u771F\u6B63\u505A\u5230\u4E86\u6309\u9700\u5BFC\u5165 \u5373&quot;\u7F16\u8BD1\u65F6\u52A0\u8F7D&quot;</span>
<span class="token comment">// \u4F46\u662F es6\u65E0\u6CD5\u53D6\u4EE3require\u7684\u52A8\u6001\u52A0\u8F7D\u529F\u80FD(es2020 import()\u5B9E\u73B0\u4E86)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>es2020 \u52A8\u6001\u52A0\u8F7D: import()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> main <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// import()\u8FD4\u56DE\u4E00\u4E2Apromise\u5BF9\u8C61</span>
<span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./section-modules/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>someVariable<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">module</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    module<span class="token punctuation">.</span><span class="token function">loadPageInto</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    main<span class="token punctuation">.</span>textContent <span class="token operator">=</span> err<span class="token punctuation">.</span>message
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4F7F\u7528\u573A\u666F:</span>
<span class="token comment">// 1.\u6309\u9700\u52A0\u8F7D</span>
button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./dialogBox.js&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">dialogBox</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      dialogBox<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">/* Error handling */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 2.\u6761\u4EF6\u52A0\u8F7D</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;moduleA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;moduleB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 3.\u52A8\u6001\u7684\u6A21\u5757\u8DEF\u5F84</span>
<span class="token keyword">import</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dt <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./test</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,185);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
